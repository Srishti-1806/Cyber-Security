"use client"

import { useState, useEffect } from "react"
import { motion } from "framer-motion"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Shield, ArrowRight } from "lucide-react"
import { Button } from "@/components/ui/button"
import {
  Chart,
  ChartContainer,
  ChartTooltip,
  ChartTooltipContent,
  ChartLegend,
  ChartLegendItem,
  PieChart,
  Pie,
  Cell,
} from "@/components/ui/chart"

interface VulnerabilityData {
  name: string
  value: number
  color: string
}

export function VulnerabilityOverview() {
  const [data, setData] = useState<VulnerabilityData[]>([])

  useEffect(() => {
    // Simulate loading data
    setTimeout(() => {
      setData([
        { name: "Critical", value: 8, color: "#ef4444" },
        { name: "High", value: 14, color: "#f97316" },
        { name: "Medium", value: 22, color: "#eab308" },
        { name: "Low", value: 35, color: "#10b981" },
      ])
    }, 1000)
  }, [])

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5, delay: 0.1 }}
    >
      <Card className="cyber-border overflow-hidden">
        <CardHeader className="flex flex-row items-center justify-between pb-2">
          <CardTitle className="flex items-center gap-2 text-sm font-medium">
            <Shield className="h-4 w-4 text-primary" />
            Vulnerability Overview
          </CardTitle>
          <Button variant="ghost" size="sm" className="gap-1 text-xs">
            <span>View All</span>
            <ArrowRight className="h-3 w-3" />
          </Button>
        </CardHeader>
        <CardContent>
          <div className="h-[300px] w-full">
            {data.length > 0 ? (
              <Chart>
                <ChartContainer>
                  <PieChart>
                    <Pie
                      data={data}
                      dataKey="value"
                      nameKey="name"
                      cx="50%"
                      cy="50%"
                      outerRadius={80}
                      innerRadius={50}
                      paddingAngle={2}
                      strokeWidth={2}
                      stroke="#0f172a"
                    >
                      {data.map((entry, index) => (
                        <Cell key={`cell-${index}`} fill={entry.color} />
                      ))}
                    </Pie>
                    <ChartTooltip>
                      <ChartTooltipContent />
                    </ChartTooltip>
                  </PieChart>
                </ChartContainer>
                <div className="mt-6">
                  <ChartLegend>
                    {data.map((item) => (
                      <ChartLegendItem
                        key={item.name}
                        name={item.name}
                        color={item.color}
                        value={`${item.value} vulnerabilities`}
                      />
                    ))}
                  </ChartLegend>
                </div>
              </Chart>
            ) : (
              <div className="flex h-full items-center justify-center">
                <div className="h-16 w-16 animate-spin rounded-full border-4 border-primary border-t-transparent" />
              </div>
            )}
          </div>
        </CardContent>
      </Card>
    </motion.div>
  )
}
